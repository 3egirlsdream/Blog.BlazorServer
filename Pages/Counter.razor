@page "/counter"

@using System.Net.Http.Json
@using DataModels
@using BlogBlazorServer.DbConnection
@using System.Linq

<MudTable Items="@Elements" Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Filter="new Func<SysUser,bool>(FilterFunc1)" @bind-SelectedItem="selectedItem1">
    <ToolBarContent>
        <MudText Typo="Typo.h6">用户表</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nr</MudTh>
        <MudTh>Code</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Password</MudTh>
        <MudTh>DateTime</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Nr">@(Elements.IndexOf(context) + 1)</MudTd>
        <MudTd DataLabel="Code">@context.UserName</MudTd>
        <MudTd DataLabel="Name">@context.DisplayName</MudTd>
        <MudTd DataLabel="Password">@context.PASSWORD</MudTd>
        <MudTd DataLabel="DateTime">@context.DatetimeCreated</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

<div class="d-flex flex-wrap mt-4">
    <MudSwitch @bind-Checked="@hover" Color="Color.Primary">Hover</MudSwitch>
    <MudSwitch @bind-Checked="@dense" Color="Color.Secondary">Dense</MudSwitch>
    <MudSwitch @bind-Checked="@striped" Color="Color.Tertiary">Striped</MudSwitch>
    <MudSwitch @bind-Checked="@bordered" Color="Color.Warning">Bordered</MudSwitch>
    <MudSpacer />
    <div style="min-width:200px;">
        <MudText Inline="true" Class="align-self-center">Selected1: @selectedItem1?.DisplayName</MudText>
    </div>
</div>

    @code {
    private int count = 1;
    private bool dense = true;
    private bool hover = true;
    private bool striped = true;
    private bool bordered = true;
    private string searchString1 = "";
    private SysUser selectedItem1 = null;
    private HashSet<SysUser> selectedItems = new HashSet<SysUser>();

    List<SysUser> Elements = new List<SysUser>();

    [CascadingParameter]
    public Error? Error { get; set; } = new Error();

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            Elements = new DbContext().Init();
        });

    }

    private bool FilterFunc1(SysUser element) => FilterFunc(element, searchString1);

    private bool FilterFunc(SysUser element, string searchString)
    {
        //if (string.IsNullOrWhiteSpace(searchString))
        //    return true;
        //if (element.Sign.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;
        //if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        //    return true;
        //if ($"{element.Number} {element.Position} {element.Molar}".Contains(searchString))
        //    return true;
        //try
        //{
        //    throw new Exception("Hello");
        //}
        //catch(Exception ex)
        //{
        //    Error?.ProcessError(ex);
        //}
    return true;
    }
}